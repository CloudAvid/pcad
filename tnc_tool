#!/bin/bash
# PVM Two Node Cluster Management tool
scriptname="tnc_tool"
scriptversion="0.1.0"

cat="/bin/cat"
cut="/bin/cut"
sed="/bin/sed"
grep="/bin/grep"
service="/sbin/service"
if [[ -f /etc/pvm.conf ]]; then
. /etc/pvm.conf
fi

tnc_status()
{
	local status_line
	local cstatus		# Connection Status
	local nrole		# Nodes Roles
	local dstatus		# Data Status
	if [[ ! -f /proc/drbd ]]; then
		echo "Failed: This node is not part of any storage zone ..."
		exit 1
	fi
	status_line=($($cat /proc/drbd | $grep "0: cs"))
	cstatus=$(echo ${status_line[1]} | $cut -d ":" -f 2)
	nrole=($(echo ${status_line[2]} | $sed -e "s/ro://" -e "s/\// /"))
	dstatus=($(echo ${status_line[3]} | $sed -e "s/ds://" -e "s/\// /"))
	
	echo "Connection Status: $cstatus"
	echo -e "your  side: role: ${nrole[0]} \tData Status: ${dstatus[0]}"
	echo -e "other side: role: ${nrole[1]} \tData Status: ${dstatus[1]}"
	echo
	$service gfs2 status | $sed -e "s/GFS2 mountpoints/FileSystems/"
}
	
# this function stop sync/cluster operations on this node ...
tnc_stop()
{
	local vml 	# List of running virtual machines on this node
	echo "You want to stop data syncronization on this node ($($uname -n)),"
	echo "All of the running virtual machines would be stopped ..."
	are_you_sure
	if [[ $? -eq 0 ]]; then exit 0; fi
	
	vml=$( $pvmctl "status" | $sed -e "1d" )
	for i in $vml; do
		echo "Stopping $i ..."
		$pcad stop $i
	done
	/pvm/Scripts/pvmctl unloadvsws
	echo "Stopping filesystem ..."
	$service gfs2 stop >/dev/null 2>&1
	if [[ $? -ne 0 ]]; then
		echo_error "Can't stop filesystem (/pvm) ..."
		exit 1
	fi
	echo "Changing role to secondary ..."
	$drbdadm secondary pvm >/dev/null 2>&1
	if [[ $? -ne 0 ]]; then
		echo_error "Can't change role to secondary ..."
		exit 1
	fi
	echo "Stopping sync operation ..."
	$service drbd stop >/dev/null 2>&1
	if [[ $? -ne 0 ]]; then
		echo_error "Can't stop sync operation ..."
		exit 1
	fi

	echo "Stopping cluster operation ..."
	$service rgmanager stop >/dev/null 2>&1
	$service ricci stop >/dev/null 2>&1
	$service cman stop >/dev/null 2>&1
}

tnc_startsync()
{
	echo "Starting sync operation ..."
	$service drbd start >/dev/null 2>&1
	if [[ $? -ne 0 ]]; then
		echo "Error: Can't start sync operation ..."
		exit 1
	fi
	echo "Make Primary ..."
	$drbdadm primary pvm >/dev/null 2>&1
	if [[ $? -ne 0 ]]; then
		echo "Error: Can't change state to primary ..."
		exit 1
	fi
}

tnc_startpvm()
{
	echo "Starting cluster ..."
	$service cman start >/dev/null 2>&1
	if [[ $? -ne "0" ]]; then
		echo "Error: Can't start cluster engine ..."
		exit 1
	fi
	$service ricci start >/dev/null 2>&1
	$service gfs2 start >/dev/null 2>&1 
	$service rgmanager start >/dev/null 2>&1
	if [[ $? -ne "0" ]]; then
		echo "Error: Can't start resourse manager ..."
		exit 1
	fi
	/pvm/Scripts/pvmctl loadvsws 
}

tnc_help()
{
	$cat <<-end-of-help
$scriptname $scriptversion
$scriptname is PVM two node cluster managent tool.

        usage:  status			- printout data-sync status of cluster
                stop			- stop pvm operation, preparing node to shutdown
                startsync		- start pvm sync-operation
                startpvm		- start pvm operation
	end-of-help
}

case "$1" in
	"status")
		tnc_status
		;;
	"stop")
		tnc_stop
		;;
	"startsync")
		tnc_startsync
		;;
	"startpvm")
		tnc_startpvm
		;;
	"help")
		tnc_help
		;;
	*)
		echo "Failed: bad command, use \"$scriptname help\" for more detail."
		;;
esac
